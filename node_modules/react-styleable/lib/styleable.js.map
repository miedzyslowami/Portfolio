{"version":3,"sources":["../src/styleable.js"],"names":["styleable","isSpecialKey","selector","getSelectorsInSetDifference","newCss","origCss","newSet","Object","keys","origSet","filter","indexOf","areSelectorsMatchingSet","length","rmSpecialCss","compose","css","rest","toCompose","reduce","acc","validate","Array","isArray","Error","decorateSource","DecoratedComponent","Styleable","props","overridden","composed","getCss","React","Component","displayName","defaultProps","propTypes","PropTypes","object"],"mappings":"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","file":"styleable.js","sourcesContent":["import invariant from 'invariant'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport getDisplayName from './utils/get-display-name'\n\nconst isSpecialKey = selector => selector === 'compose'\n\nfunction getSelectorsInSetDifference(newCss = {}, origCss = {}) {\n  const newSet = Object.keys(newCss)\n  const origSet = Object.keys(origCss)\n  return newSet\n    .filter(selector => origSet.indexOf(selector) === -1)\n    .filter(selector => !isSpecialKey(selector))\n}\n\nfunction areSelectorsMatchingSet(newCss, origCss) {\n  return getSelectorsInSetDifference(newCss, origCss).length <= 0\n}\n\nconst rmSpecialCss = css => {\n  const { compose, ...rest } = css\n  return rest\n}\n\nconst compose = (toCompose = {}, css) =>\n  Object.keys(toCompose).reduce((acc, selector) => {\n    acc[selector] = css[selector] + ' ' + toCompose[selector]\n    return acc\n  }, css)\n\nconst validate = (origCss, newCss) => {\n  invariant(\n    areSelectorsMatchingSet(newCss, origCss),\n    'Expected \"this.props.css\" to provide only selectors in the original stylesheet.  These selectors \"%s\" are not included in the stylesheet keys, \"%s\".',\n    getSelectorsInSetDifference(newCss, origCss),\n    Object.keys(origCss)\n  )\n\n  invariant(\n    areSelectorsMatchingSet(newCss.compose, origCss),\n    'Expected \"this.props.css.compose\" to provide only selectors in the original stylesheet.  These selectors \"%s\" are not included in the stylesheet keys, \"%s\".',\n    getSelectorsInSetDifference(newCss.compose, origCss),\n    Object.keys(origCss)\n  )\n}\n\nexport default function styleable(origCss) {\n  if (!origCss) origCss = {}\n\n  if (typeof origCss !== 'object' || Array.isArray(origCss))\n    throw new Error(\n      'stylesheet must be an object (ie, export object from a css module)'\n    )\n\n  return function decorateSource(DecoratedComponent) {\n    class Styleable extends React.Component {\n      getCss() {\n        const newCss = this.props.css || {}\n        validate(origCss, newCss)\n        const overridden = { ...origCss, ...rmSpecialCss(newCss) }\n        const composed = compose(newCss.compose, overridden)\n        return composed\n      }\n      render() {\n        return <DecoratedComponent {...this.props} css={this.getCss()} />\n      }\n    }\n    Styleable.displayName = `Styleable(${getDisplayName(DecoratedComponent)})`\n    Styleable.defaultProps = {\n      ...DecoratedComponent.defaultProps,\n      css: {}\n    }\n    Styleable.propTypes = {\n      ...DecoratedComponent.propTypes,\n      css: PropTypes.object\n    }\n    return Styleable\n  }\n}\n"]}