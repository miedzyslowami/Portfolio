'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.default = styleable;

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _getDisplayName = require('./utils/get-display-name');

var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var isSpecialKey = function isSpecialKey(selector) {
  return selector === 'compose';
};

function getSelectorsInSetDifference() {
  var newCss = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var origCss = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var newSet = Object.keys(newCss);
  var origSet = Object.keys(origCss);
  return newSet.filter(function (selector) {
    return origSet.indexOf(selector) === -1;
  }).filter(function (selector) {
    return !isSpecialKey(selector);
  });
}

function areSelectorsMatchingSet(newCss, origCss) {
  return getSelectorsInSetDifference(newCss, origCss).length <= 0;
}

var rmSpecialCss = function rmSpecialCss(css) {
  var compose = css.compose,
      rest = _objectWithoutProperties(css, ['compose']);

  return rest;
};

var compose = function compose() {
  var toCompose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var css = arguments[1];
  return Object.keys(toCompose).reduce(function (acc, selector) {
    acc[selector] = css[selector] + ' ' + toCompose[selector];
    return acc;
  }, css);
};

var validate = function validate(origCss, newCss) {
  (0, _invariant2.default)(areSelectorsMatchingSet(newCss, origCss), 'Expected "this.props.css" to provide only selectors in the original stylesheet.  These selectors "%s" are not included in the stylesheet keys, "%s".', getSelectorsInSetDifference(newCss, origCss), Object.keys(origCss));

  (0, _invariant2.default)(areSelectorsMatchingSet(newCss.compose, origCss), 'Expected "this.props.css.compose" to provide only selectors in the original stylesheet.  These selectors "%s" are not included in the stylesheet keys, "%s".', getSelectorsInSetDifference(newCss.compose, origCss), Object.keys(origCss));
};

function styleable(origCss) {
  if (!origCss) origCss = {};

  if ((typeof origCss === 'undefined' ? 'undefined' : _typeof(origCss)) !== 'object' || Array.isArray(origCss)) throw new Error('stylesheet must be an object (ie, export object from a css module)');

  return function decorateSource(DecoratedComponent) {
    var Styleable = function (_React$Component) {
      _inherits(Styleable, _React$Component);

      function Styleable() {
        _classCallCheck(this, Styleable);

        return _possibleConstructorReturn(this, (Styleable.__proto__ || Object.getPrototypeOf(Styleable)).apply(this, arguments));
      }

      _createClass(Styleable, [{
        key: 'getCss',
        value: function getCss() {
          var newCss = this.props.css || {};
          validate(origCss, newCss);
          var overridden = _extends({}, origCss, rmSpecialCss(newCss));
          var composed = compose(newCss.compose, overridden);
          return composed;
        }
      }, {
        key: 'render',
        value: function render() {
          return _react2.default.createElement(DecoratedComponent, _extends({}, this.props, { css: this.getCss() }));
        }
      }]);

      return Styleable;
    }(_react2.default.Component);

    Styleable.displayName = 'Styleable(' + (0, _getDisplayName2.default)(DecoratedComponent) + ')';
    Styleable.defaultProps = _extends({}, DecoratedComponent.defaultProps, {
      css: {}
    });
    Styleable.propTypes = _extends({}, DecoratedComponent.propTypes, {
      css: _propTypes2.default.object
    });
    return Styleable;
  };
}
//# sourceMappingURL=styleable.js.map